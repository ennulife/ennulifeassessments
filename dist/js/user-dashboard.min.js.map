{"version":3,"file":"js/user-dashboard.min.js","mappings":"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","sources":["webpack://ennulife-assessments/./assets/js/user-dashboard.js"],"sourcesContent":["/**\n * ENNU Life User Dashboard JavaScript\n * This file controls all the interactivity for the \"Bio-Metric Canvas\" dashboard.\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('ENNU Dashboard: DOM loaded, initializing components...');\n    \n    const dashboardEl = document.querySelector('.ennu-user-dashboard');\n    if (dashboardEl) {\n        new ENNUDashboard(dashboardEl);\n    }\n    \n    // Initialize My Story Tabs independently to ensure they work\n    const storyTabsManager = new MyStoryTabsManager();\n    console.log('ENNU Dashboard: My Story Tabs Manager initialized');\n});\n\n/**\n * My Story Tabs Manager\n * Handles tab navigation for the My Story section\n */\nclass MyStoryTabsManager {\n    constructor() {\n        this.activeTab = 'tab-my-assessments';\n        this.tabContainer = null;\n        this.tabLinks = [];\n        this.tabContents = [];\n        \n        this.init();\n    }\n    \n    init() {\n        // Wait for DOM to be ready\n        if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', () => this.initialize());\n        } else {\n            this.initialize();\n        }\n    }\n    \n    initialize() {\n        console.log('ENNU Dashboard: Initializing My Story tabs...');\n        this.tabContainer = document.querySelector('.my-story-tabs');\n        \n        if (!this.tabContainer) {\n            console.error('ENNU Dashboard: My Story tabs container not found (.my-story-tabs)');\n            return;\n        }\n        \n        console.log('ENNU Dashboard: Found tab container:', this.tabContainer);\n        \n        this.tabLinks = this.tabContainer.querySelectorAll('.my-story-tab-nav a');\n        this.tabContents = this.tabContainer.querySelectorAll('.my-story-tab-content');\n        \n        console.log('ENNU Dashboard: Found', this.tabLinks.length, 'tab links and', this.tabContents.length, 'tab contents');\n        \n        if (this.tabLinks.length === 0 || this.tabContents.length === 0) {\n            console.error('ENNU Dashboard: No tabs or content found');\n            return;\n        }\n        \n        this.setupEventListeners();\n        this.addAccessibilityAttributes();\n        \n        // Ensure first tab is active by default\n        this.activateFirstTab();\n        \n        console.log('ENNU Dashboard: My Story tabs initialized successfully with', this.tabLinks.length, 'tabs');\n    }\n    \n    activateFirstTab() {\n        // Hide all tab contents first\n        this.tabContents.forEach(content => {\n            content.classList.remove('my-story-tab-active');\n            content.style.display = 'none';\n            content.style.opacity = '0';\n            content.style.transform = 'translateY(10px)';\n        });\n        \n        // Remove active class from all tab links\n        this.tabLinks.forEach(link => {\n            link.classList.remove('my-story-tab-active');\n        });\n        \n        // Activate the first tab\n        if (this.tabLinks.length > 0) {\n            const firstLink = this.tabLinks[0];\n            const firstTabId = firstLink.getAttribute('href');\n            const firstContent = document.querySelector(firstTabId);\n            \n            if (firstContent) {\n                firstLink.classList.add('my-story-tab-active');\n                firstContent.classList.add('my-story-tab-active');\n                firstContent.style.display = 'block';\n                \n                // Trigger animation after a brief delay\n                setTimeout(() => {\n                    firstContent.style.opacity = '1';\n                    firstContent.style.transform = 'translateY(0)';\n                }, 50);\n                \n                this.activeTab = firstTabId.substring(1);\n                console.log('ENNU Dashboard: Activated first tab:', this.activeTab);\n            }\n        }\n    }\n    \n    setupEventListeners() {\n        console.log('ENNU Dashboard: Setting up event listeners for', this.tabLinks.length, 'tabs');\n        \n        this.tabLinks.forEach((link, index) => {\n            console.log('ENNU Dashboard: Setting up listeners for tab', index, 'with href:', link.getAttribute('href'));\n            \n            // Click event\n            link.addEventListener('click', (e) => {\n                console.log('ENNU Dashboard: Tab clicked:', link.getAttribute('href'));\n                e.preventDefault();\n                this.switchToTab(link.getAttribute('href'));\n            });\n            \n            // Keyboard events\n            link.addEventListener('keydown', (e) => {\n                if (e.key === 'Enter' || e.key === ' ') {\n                    console.log('ENNU Dashboard: Tab activated via keyboard:', link.getAttribute('href'));\n                    e.preventDefault();\n                    this.switchToTab(link.getAttribute('href'));\n                } else if (e.key === 'ArrowRight') {\n                    e.preventDefault();\n                    this.navigateToNextTab(1);\n                } else if (e.key === 'ArrowLeft') {\n                    e.preventDefault();\n                    this.navigateToNextTab(-1);\n                }\n            });\n        });\n        \n        // Add event listeners for switch-tab buttons within tab content\n        document.addEventListener('click', (e) => {\n            if (e.target.classList.contains('switch-tab') || e.target.closest('.switch-tab')) {\n                console.log('ENNU Dashboard: Switch-tab button clicked');\n                e.preventDefault();\n                const button = e.target.classList.contains('switch-tab') ? e.target : e.target.closest('.switch-tab');\n                const targetTab = button.getAttribute('data-tab');\n                if (targetTab) {\n                    console.log('ENNU Dashboard: Switching to tab via button:', targetTab);\n                    this.switchToTab('#' + targetTab);\n                }\n            }\n        });\n        \n        console.log('ENNU Dashboard: Event listeners setup complete');\n    }\n    \n    addAccessibilityAttributes() {\n        // Add ARIA attributes for accessibility\n        this.tabLinks.forEach((link, index) => {\n            const targetId = link.getAttribute('href').substring(1);\n            link.setAttribute('role', 'tab');\n            link.setAttribute('aria-controls', targetId);\n            link.setAttribute('aria-selected', link.classList.contains('my-story-tab-active'));\n            link.setAttribute('tabindex', link.classList.contains('my-story-tab-active') ? '0' : '-1');\n        });\n        \n        this.tabContents.forEach((content) => {\n            content.setAttribute('role', 'tabpanel');\n            content.setAttribute('aria-hidden', !content.classList.contains('my-story-tab-active'));\n        });\n        \n        // Add role to tab container\n        const tabList = this.tabContainer.querySelector('.my-story-tab-nav ul');\n        if (tabList) {\n            tabList.setAttribute('role', 'tablist');\n        }\n    }\n    \n    switchToTab(targetId) {\n        console.log('ENNU Dashboard: Switching to tab:', targetId);\n        \n        if (!targetId.startsWith('#')) {\n            targetId = '#' + targetId;\n        }\n        \n        const targetContent = document.querySelector(targetId);\n        if (!targetContent) {\n            console.warn('ENNU Dashboard: Target tab content not found:', targetId);\n            return;\n        }\n        \n        console.log('ENNU Dashboard: Found target content:', targetContent);\n        \n        // Remove active class from all tabs and contents\n        this.tabLinks.forEach(link => {\n            link.classList.remove('my-story-tab-active');\n            link.setAttribute('aria-selected', 'false');\n            link.setAttribute('tabindex', '-1');\n        });\n        \n        this.tabContents.forEach(content => {\n            content.classList.remove('my-story-tab-active');\n            content.setAttribute('aria-hidden', 'true');\n            content.style.display = 'none';\n            content.style.opacity = '0';\n            content.style.transform = 'translateY(10px)';\n        });\n        \n        // Add active class to selected tab and content\n        const activeLink = this.tabContainer.querySelector(`a[href=\"${targetId}\"]`);\n        if (activeLink) {\n            activeLink.classList.add('my-story-tab-active');\n            activeLink.setAttribute('aria-selected', 'true');\n            activeLink.setAttribute('tabindex', '0');\n        }\n        \n        // Show target content\n        targetContent.classList.add('my-story-tab-active');\n        targetContent.setAttribute('aria-hidden', 'false');\n        targetContent.style.display = 'block';\n        \n        // Trigger animation\n        setTimeout(() => {\n            targetContent.style.opacity = '1';\n            targetContent.style.transform = 'translateY(0)';\n        }, 50);\n        \n        // Update active tab reference\n        this.activeTab = targetId.substring(1);\n        \n        console.log('ENNU Dashboard: Successfully switched to tab:', targetId);\n    }\n    \n    navigateToNextTab(direction) {\n        const currentIndex = Array.from(this.tabLinks).findIndex(link => \n            link.classList.contains('my-story-tab-active')\n        );\n        \n        if (currentIndex === -1) return;\n        \n        const newIndex = (currentIndex + direction + this.tabLinks.length) % this.tabLinks.length;\n        const newTab = this.tabLinks[newIndex];\n        \n        this.switchToTab(newTab.getAttribute('href'));\n    }\n    \n    triggerTabChangeEvent(targetId, activeLink, targetContent) {\n        // Custom event for tab changes\n        const event = new CustomEvent('tabChanged', {\n            detail: {\n                targetId: targetId,\n                activeLink: activeLink,\n                targetContent: targetContent\n            }\n        });\n        this.tabContainer.dispatchEvent(event);\n    }\n    \n    saveTabState() {\n        if (typeof localStorage !== 'undefined') {\n            localStorage.setItem('ennu-active-tab', this.activeTab);\n        }\n    }\n    \n    loadTabState() {\n        if (typeof localStorage !== 'undefined') {\n            const savedTab = localStorage.getItem('ennu-active-tab');\n            if (savedTab && this.tabContainer.querySelector(`a[href=\"#${savedTab}\"]`)) {\n                this.switchToTab('#' + savedTab);\n            }\n        }\n    }\n    \n    getActiveTab() {\n        return this.activeTab;\n    }\n    \n    getAllTabs() {\n        return Array.from(this.tabLinks).map(link => link.getAttribute('href').substring(1));\n    }\n}\n\n// Add CSS styles for My Story tabs\nfunction addMyStoryTabStyles() {\n    const style = document.createElement('style');\n    style.textContent = `\n        .my-story-tab-content {\n            display: none;\n            opacity: 0;\n            transform: translateY(10px);\n            transition: all 0.3s ease;\n        }\n        \n        .my-story-tab-content.my-story-tab-active {\n            display: block;\n            opacity: 1;\n            transform: translateY(0);\n        }\n    `;\n    document.head.appendChild(style);\n}\n\n// Add the styles when the script loads\naddMyStoryTabStyles();\n\n/**\n * Main Dashboard Class\n * Handles all dashboard functionality\n */\nclass ENNUDashboard {\n\tconstructor(dashboardElement) {\n\t\tthis.dashboard = dashboardElement;\n\t\tthis.init();\n\t}\n\n\tinitThemeToggle() {\n\t\tconst themeToggle = this.dashboard.querySelector('#theme-toggle');\n\t\tif (!themeToggle) return;\n\n\t\t// Set initial theme\n\t\tconst savedTheme = localStorage.getItem('ennu-theme') || 'dark';\n\t\tthis.setTheme(savedTheme);\n\n\t\tthemeToggle.addEventListener('click', () => {\n\t\t\tconst currentTheme = this.dashboard.getAttribute('data-theme') || 'dark';\n\t\t\tconst newTheme = currentTheme === 'dark' ? 'light' : 'dark';\n\t\t\tthis.setTheme(newTheme);\n\t\t});\n\t}\n\n\tsetTheme(theme) {\n\t\tthis.dashboard.setAttribute('data-theme', theme);\n\t\tlocalStorage.setItem('ennu-theme', theme);\n\t\t\n\t\t// Update toggle position\n\t\tconst toggleThumb = this.dashboard.querySelector('.toggle-thumb');\n\t\tif (toggleThumb) {\n\t\t\tif (theme === 'light') {\n\t\t\t\ttoggleThumb.style.transform = 'translateX(30px)';\n\t\t\t} else {\n\t\t\t\ttoggleThumb.style.transform = 'translateX(0)';\n\t\t\t}\n\t\t}\n\t}\n\n\tinitToggleAll() {\n\t\tconst toggleAllBtn = this.dashboard.querySelector('#toggle-all-accordions');\n\t\tif (!toggleAllBtn) return;\n\n\t\ttoggleAllBtn.addEventListener('click', () => {\n\t\t\tconst accordionItems = this.dashboard.querySelectorAll('.accordion-item');\n\t\t\tconst allOpen = Array.from(accordionItems).every(item => item.classList.contains('open'));\n\t\t\t\n\t\t\taccordionItems.forEach(item => {\n\t\t\t\tif (allOpen) {\n\t\t\t\t\titem.classList.remove('open');\n\t\t\t\t} else {\n\t\t\t\t\titem.classList.add('open');\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\ttoggleAllBtn.textContent = allOpen ? 'Expand All' : 'Collapse All';\n\t\t});\n\t}\n\n\tinitHealthMapAccordion() {\n\t\tconst accordionItems = this.dashboard.querySelectorAll('.accordion-item');\n\t\t\n\t\taccordionItems.forEach(item => {\n\t\t\tconst header = item.querySelector('.accordion-header');\n\t\t\tif (!header) return;\n\n\t\t\theader.addEventListener('click', () => {\n\t\t\t\titem.classList.toggle('open');\n\t\t\t});\n\n\t\t\t// Keyboard support\n\t\t\theader.addEventListener('keydown', (e) => {\n\t\t\t\tif (e.key === 'Enter' || e.key === ' ') {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\titem.classList.toggle('open');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tinitDetailsToggle() {\n\t\tconst toggleButtons = this.dashboard.querySelectorAll('.view-details-toggle');\n\t\t\n\t\ttoggleButtons.forEach(button => {\n\t\t\tbutton.addEventListener('click', () => {\n\t\t\t\tconst listItem = button.closest('.assessment-list-item');\n\t\t\t\tconst detailsContainer = listItem.querySelector('.category-details-container');\n\t\t\t\t\n\t\t\t\tif (detailsContainer) {\n\t\t\t\t\tconst isExpanded = listItem.getAttribute('aria-expanded') === 'true';\n\t\t\t\t\tlistItem.setAttribute('aria-expanded', !isExpanded);\n\t\t\t\t\t\n\t\t\t\t\tif (!isExpanded) {\n\t\t\t\t\t\tdetailsContainer.style.display = 'block';\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tdetailsContainer.style.opacity = '1';\n\t\t\t\t\t\t\tdetailsContainer.style.transform = 'translateY(0)';\n\t\t\t\t\t\t}, 10);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdetailsContainer.style.opacity = '0';\n\t\t\t\t\t\tdetailsContainer.style.transform = 'translateY(-10px)';\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tdetailsContainer.style.display = 'none';\n\t\t\t\t\t\t}, 300);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\tinitContextualText() {\n\t\tconst contextualText = this.dashboard.querySelector('#contextual-text');\n\t\tconst mainScoreOrb = this.dashboard.querySelector('.main-score-orb');\n\t\t\n\t\tif (!contextualText || !mainScoreOrb) return;\n\n\t\tconst insights = {\n\t\t\t'0-3': 'Your ENNU Life Score indicates significant opportunities for health optimization. Focus on completing assessments and implementing foundational lifestyle changes.',\n\t\t\t'3-5': 'You\\'re making progress! Continue with your health journey by completing more assessments and following personalized recommendations.',\n\t\t\t'5-7': 'Great work! Your health foundation is solid. Focus on fine-tuning specific areas and maintaining consistency.',\n\t\t\t'7-9': 'Excellent! You\\'re approaching optimal health. Continue your current practices and explore advanced optimization strategies.',\n\t\t\t'9-10': 'Outstanding! You\\'ve achieved exceptional health optimization. Maintain your practices and consider becoming a health mentor.'\n\t\t};\n\n\t\tconst updateContextualText = () => {\n\t\t\tconst score = parseFloat(mainScoreOrb.getAttribute('data-score') || 0);\n\t\t\tlet insight = insights['0-3'];\n\t\t\t\n\t\t\tif (score >= 9) insight = insights['9-10'];\n\t\t\telse if (score >= 7) insight = insights['7-9'];\n\t\t\telse if (score >= 5) insight = insights['5-7'];\n\t\t\telse if (score >= 3) insight = insights['3-5'];\n\t\t\t\n\t\t\tcontextualText.textContent = insight;\n\t\t};\n\n\t\t// Update on hover\n\t\tmainScoreOrb.addEventListener('mouseenter', () => {\n\t\t\tupdateContextualText();\n\t\t\tcontextualText.classList.add('visible');\n\t\t});\n\n\t\tmainScoreOrb.addEventListener('mouseleave', () => {\n\t\t\tcontextualText.classList.remove('visible');\n\t\t});\n\n\t\t// Initial update\n\t\tupdateContextualText();\n\t}\n\n\tinitScoreAnimation() {\n\t\tconst mainScoreOrb = this.dashboard.querySelector('.main-score-orb');\n\t\tif (!mainScoreOrb) return;\n\n\t\tconst targetScore = parseFloat(mainScoreOrb.getAttribute('data-score') || 0);\n\t\tconst scoreElement = mainScoreOrb.querySelector('.main-score-value');\n\t\t\n\t\tif (!scoreElement) return;\n\n\t\tlet currentScore = 0;\n\t\tconst duration = 2000; // 2 seconds\n\t\tconst startTime = performance.now();\n\n\t\tconst step = (timestamp) => {\n\t\t\tconst elapsed = timestamp - startTime;\n\t\t\tconst progress = Math.min(elapsed / duration, 1);\n\t\t\t\n\t\t\t// Easing function for smooth animation\n\t\t\tconst easeOutQuart = 1 - Math.pow(1 - progress, 4);\n\t\t\tcurrentScore = targetScore * easeOutQuart;\n\t\t\t\n\t\t\tscoreElement.textContent = currentScore.toFixed(1);\n\t\t\t\n\t\t\tif (progress < 1) {\n\t\t\t\trequestAnimationFrame(step);\n\t\t\t} else {\n\t\t\t\tmainScoreOrb.classList.add('loaded');\n\t\t\t}\n\t\t};\n\n\t\trequestAnimationFrame(step);\n\t}\n\n\tinitPillarAnimation() {\n\t\tconst pillarOrbs = this.dashboard.querySelectorAll('.pillar-orb');\n\t\t\n\t\tpillarOrbs.forEach((orb, index) => {\n\t\t\tsetTimeout(() => {\n\t\t\t\torb.classList.add('visible');\n\t\t\t}, index * 200);\n\t\t});\n\t}\n\n\tinitHistoricalCharts() {\n\t\t// Check if Chart.js is available\n\t\tif (typeof Chart === 'undefined') {\n\t\t\tconsole.warn('ENNU Dashboard: Chart.js not available, skipping charts');\n\t\t\treturn;\n\t\t}\n\n\t\tthis.initScoreHistoryChart();\n\t\tthis.initBMIHistoryChart();\n\t}\n\n\tinitScoreHistoryChart() {\n\t\tconst scoreCtx = this.dashboard.querySelector('#scoreHistoryChart');\n\t\tif (!scoreCtx) return;\n\n\t\t// Sample data - replace with actual user data\n\t\tconst scoreData = [\n\t\t\t{ date: '2024-01-01', score: 6.2 },\n\t\t\t{ date: '2024-02-01', score: 6.8 },\n\t\t\t{ date: '2024-03-01', score: 7.1 },\n\t\t\t{ date: '2024-04-01', score: 7.5 },\n\t\t\t{ date: '2024-05-01', score: 7.8 },\n\t\t\t{ date: '2024-06-01', score: 8.2 }\n\t\t];\n\n\t\tif (scoreData.length > 0) {\n\t\t\tnew Chart(scoreCtx, {\n\t\t\t\ttype: 'line',\n\t\t\t\tdata: {\n\t\t\t\t\tlabels: scoreData.map(d => new Date(d.date)),\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'ENNU Life Score',\n\t\t\t\t\t\tdata: scoreData.map(d => d.score),\n\t\t\t\t\t\tborderColor: '#10b981',\n\t\t\t\t\t\tbackgroundColor: 'rgba(16, 185, 129, 0.1)',\n\t\t\t\t\t\tborderWidth: 3,\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tpointBackgroundColor: '#10b981',\n\t\t\t\t\t\tpointBorderColor: '#ffffff',\n\t\t\t\t\t\tpointBorderWidth: 2,\n\t\t\t\t\t\tpointRadius: 6,\n\t\t\t\t\t\tpointHoverRadius: 8\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\tinteraction: {\n\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\tmode: 'index',\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tx: { \n\t\t\t\t\t\t\ttype: 'time', \n\t\t\t\t\t\t\ttime: { \n\t\t\t\t\t\t\t\tunit: 'day',\n\t\t\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\t\t\tday: 'MMM d'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\tgrid: { color: 'rgba(255, 255, 255, 0.1)' }, \n\t\t\t\t\t\t\tticks: { \n\t\t\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.7)',\n\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\tsize: 12\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t},\n\t\t\t\t\t\ty: { \n\t\t\t\t\t\t\tgrid: { color: 'rgba(255, 255, 255, 0.1)' }, \n\t\t\t\t\t\t\tticks: { \n\t\t\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.7)',\n\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\tsize: 12\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tplugins: { \n\t\t\t\t\t\tlegend: { display: false },\n\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.8)',\n\t\t\t\t\t\t\ttitleColor: '#fff',\n\t\t\t\t\t\t\tbodyColor: '#fff',\n\t\t\t\t\t\t\tborderColor: 'rgba(52, 211, 153, 0.5)',\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\tcornerRadius: 8,\n\t\t\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\t\ttitle: function(context) {\n\t\t\t\t\t\t\t\t\treturn 'Score: ' + context[0].parsed.y.toFixed(1);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlabel: function(context) {\n\t\t\t\t\t\t\t\t\treturn 'Date: ' + new Date(context.parsed.x).toLocaleDateString();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// Show empty state for score chart\n\t\t\tscoreCtx.parentElement.classList.add('loading');\n\t\t\tscoreCtx.parentElement.innerHTML = '<div class=\"empty-state\"><div class=\"empty-state-icon\">📊</div><h3>No Score Data</h3><p>Complete assessments to see your score history</p></div>';\n\t\t}\n\t}\n\n\tinitBMIHistoryChart() {\n\t\tconst bmiCtx = this.dashboard.querySelector('#bmiHistoryChart');\n\t\tif (!bmiCtx) return;\n\n\t\t// Sample data - replace with actual user data\n\t\tconst bmiData = [\n\t\t\t{ date: '2024-01-01', bmi: 24.5 },\n\t\t\t{ date: '2024-02-01', bmi: 24.2 },\n\t\t\t{ date: '2024-03-01', bmi: 23.8 },\n\t\t\t{ date: '2024-04-01', bmi: 23.5 },\n\t\t\t{ date: '2024-05-01', bmi: 23.1 },\n\t\t\t{ date: '2024-06-01', bmi: 22.8 }\n\t\t];\n\n\t\tif (bmiData.length > 0) {\n\t\t\tnew Chart(bmiCtx, {\n\t\t\t\ttype: 'line',\n\t\t\t\tdata: {\n\t\t\t\t\tlabels: bmiData.map(d => new Date(d.date)),\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'BMI',\n\t\t\t\t\t\tdata: bmiData.map(d => d.bmi),\n\t\t\t\t\t\tborderColor: '#3b82f6',\n\t\t\t\t\t\tbackgroundColor: 'rgba(59, 130, 246, 0.1)',\n\t\t\t\t\t\tborderWidth: 3,\n\t\t\t\t\t\tfill: true,\n\t\t\t\t\t\ttension: 0.4,\n\t\t\t\t\t\tpointBackgroundColor: '#3b82f6',\n\t\t\t\t\t\tpointBorderColor: '#ffffff',\n\t\t\t\t\t\tpointBorderWidth: 2,\n\t\t\t\t\t\tpointRadius: 6,\n\t\t\t\t\t\tpointHoverRadius: 8\n\t\t\t\t\t}]\n\t\t\t\t},\n\t\t\t\toptions: {\n\t\t\t\t\tresponsive: true,\n\t\t\t\t\tmaintainAspectRatio: false,\n\t\t\t\t\tinteraction: {\n\t\t\t\t\t\tintersect: false,\n\t\t\t\t\t\tmode: 'index',\n\t\t\t\t\t},\n\t\t\t\t\tscales: {\n\t\t\t\t\t\tx: { \n\t\t\t\t\t\t\ttype: 'time', \n\t\t\t\t\t\t\ttime: { \n\t\t\t\t\t\t\t\tunit: 'day',\n\t\t\t\t\t\t\t\tdisplayFormats: {\n\t\t\t\t\t\t\t\t\tday: 'MMM d'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}, \n\t\t\t\t\t\t\tgrid: { color: 'rgba(255, 255, 255, 0.1)' }, \n\t\t\t\t\t\t\tticks: { \n\t\t\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.7)',\n\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\tsize: 12\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t},\n\t\t\t\t\t\ty: { \n\t\t\t\t\t\t\tgrid: { color: 'rgba(255, 255, 255, 0.1)' }, \n\t\t\t\t\t\t\tticks: { \n\t\t\t\t\t\t\t\tcolor: 'rgba(255, 255, 255, 0.7)',\n\t\t\t\t\t\t\t\tfont: {\n\t\t\t\t\t\t\t\t\tsize: 12\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tplugins: { \n\t\t\t\t\t\tlegend: { display: false },\n\t\t\t\t\t\ttooltip: {\n\t\t\t\t\t\t\tbackgroundColor: 'rgba(0, 0, 0, 0.8)',\n\t\t\t\t\t\t\ttitleColor: '#fff',\n\t\t\t\t\t\t\tbodyColor: '#fff',\n\t\t\t\t\t\t\tborderColor: 'rgba(52, 211, 153, 0.5)',\n\t\t\t\t\t\t\tborderWidth: 1,\n\t\t\t\t\t\t\tcornerRadius: 8,\n\t\t\t\t\t\t\tdisplayColors: false,\n\t\t\t\t\t\t\tcallbacks: {\n\t\t\t\t\t\t\t\ttitle: function(context) {\n\t\t\t\t\t\t\t\t\treturn 'BMI: ' + context[0].parsed.y.toFixed(1);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\tlabel: function(context) {\n\t\t\t\t\t\t\t\t\treturn 'Date: ' + new Date(context.parsed.x).toLocaleDateString();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} else if (bmiCtx) {\n\t\t\t// Show empty state for BMI chart\n\t\t\tbmiCtx.parentElement.classList.add('loading');\n\t\t\tbmiCtx.parentElement.innerHTML = '<div class=\"empty-state\"><div class=\"empty-state-icon\">⚖️</div><h3>No BMI Data</h3><p>Update your height and weight to see BMI trends</p></div>';\n\t\t}\n\t}\n\n\t// Enhanced method for assessment card interactions\n\tinitAssessmentCardInteractions() {\n\t\tconsole.log('ENNU Dashboard: Initializing assessment card interactions...');\n\t\t\n\t\tconst assessmentCards = this.dashboard.querySelectorAll('.assessment-card');\n\t\tconsole.log('ENNU Dashboard: Found', assessmentCards.length, 'assessment cards');\n\t\t\n\t\tassessmentCards.forEach(card => {\n\t\t\t// Add hover effects\n\t\t\tcard.addEventListener('mouseenter', () => {\n\t\t\t\tcard.style.transform = 'translateY(-4px)';\n\t\t\t});\n\t\t\t\n\t\t\tcard.addEventListener('mouseleave', () => {\n\t\t\t\tcard.style.transform = 'translateY(0)';\n\t\t\t});\n\t\t\t\n\t\t\t// Add click tracking for analytics\n\t\t\tconst actionButtons = card.querySelectorAll('.btn');\n\t\t\tactionButtons.forEach(button => {\n\t\t\t\tbutton.addEventListener('click', (e) => {\n\t\t\t\t\tconst action = button.textContent.trim();\n\t\t\t\t\tconst assessmentTitle = card.querySelector('.assessment-title').textContent;\n\t\t\t\t\tconsole.log(`Assessment action: ${action} for ${assessmentTitle}`);\n\t\t\t\t\t// Here you could add analytics tracking\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t\t\n\t\t// Handle collapsible sections for assessment cards\n\t\tthis.dashboard.addEventListener('click', (e) => {\n\t\t\tconst recommendationsBtn = e.target.closest('.btn-recommendations');\n\t\t\tconst breakdownBtn = e.target.closest('.btn-breakdown');\n\t\t\t\n\t\t\tif (recommendationsBtn) {\n\t\t\t\tconsole.log('ENNU Dashboard: Recommendations button clicked');\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.toggleSection(recommendationsBtn, 'recommendations-section');\n\t\t\t}\n\t\t\t\n\t\t\tif (breakdownBtn) {\n\t\t\t\tconsole.log('ENNU Dashboard: Breakdown button clicked');\n\t\t\t\te.preventDefault();\n\t\t\t\tthis.toggleSection(breakdownBtn, 'breakdown-section');\n\t\t\t}\n\t\t});\n\t\t\n\t\tconsole.log('ENNU Dashboard: Assessment card interactions initialized');\n\t}\n\t\n\ttoggleSection(button, sectionClass) {\n\t\tconsole.log('ENNU Dashboard: Toggling section:', sectionClass);\n\t\t\n\t\tconst assessmentCard = button.closest('.assessment-card');\n\t\tconst section = assessmentCard.querySelector('.' + sectionClass);\n\t\t\n\t\tif (!section) {\n\t\t\tconsole.warn('ENNU Dashboard: Section not found:', sectionClass);\n\t\t\treturn;\n\t\t}\n\t\t\n\t\tconsole.log('ENNU Dashboard: Found section:', section);\n\t\t\n\t\t// Toggle button active state\n\t\tbutton.classList.toggle('active');\n\t\t\n\t\t// Check if section is currently expanded\n\t\tconst isExpanded = section.classList.contains('expanded');\n\t\t\n\t\tif (!isExpanded) {\n\t\t\t// Expanding the section\n\t\t\tconsole.log('ENNU Dashboard: Expanding section');\n\t\t\tsection.style.display = 'block';\n\t\t\tsection.classList.remove('hidden');\n\t\t\t\n\t\t\t// Trigger expansion animation\n\t\t\trequestAnimationFrame(() => {\n\t\t\t\tsection.classList.add('expanded');\n\t\t\t});\n\t\t\t\n\t\t\t// Animate progress bars in (if it's a breakdown section)\n\t\t\tif (sectionClass === 'breakdown-section') {\n\t\t\t\tthis.animateProgressBars(section, 'in');\n\t\t\t}\n\t\t} else {\n\t\t\t// Collapsing the section\n\t\t\tconsole.log('ENNU Dashboard: Collapsing section');\n\t\t\t// Animate progress bars out first (if it's a breakdown section)\n\t\t\tif (sectionClass === 'breakdown-section') {\n\t\t\t\tthis.animateProgressBars(section, 'out');\n\t\t\t\t\n\t\t\t\t// Wait for progress bar animation to complete before collapsing\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsection.classList.remove('expanded');\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tsection.style.display = 'none';\n\t\t\t\t\t\tsection.classList.add('hidden');\n\t\t\t\t\t}, 400); // Match the CSS transition duration\n\t\t\t\t}, 600); // Progress bar animation duration\n\t\t\t} else {\n\t\t\t\t// For non-breakdown sections, collapse immediately\n\t\t\t\tsection.classList.remove('expanded');\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsection.style.display = 'none';\n\t\t\t\t\tsection.classList.add('hidden');\n\t\t\t\t}, 400); // Match the CSS transition duration\n\t\t\t}\n\t\t}\n\t}\n\t\n\tanimateProgressBars(section, direction) {\n\t\tconst progressBars = section.querySelectorAll('.category-score-fill');\n\t\t\n\t\tprogressBars.forEach((bar, index) => {\n\t\t\tconst targetWidth = bar.style.width;\n\t\t\tbar.style.setProperty('--target-width', targetWidth);\n\t\t\t\n\t\t\t// Add delay for staggered animation\n\t\t\tsetTimeout(() => {\n\t\t\t\tif (direction === 'in') {\n\t\t\t\t\tbar.classList.remove('animate-out');\n\t\t\t\t\tbar.classList.add('animate-in');\n\t\t\t\t} else {\n\t\t\t\t\tbar.classList.remove('animate-in');\n\t\t\t\t\tbar.classList.add('animate-out');\n\t\t\t\t}\n\t\t\t}, index * 100); // Stagger each bar by 100ms\n\t\t});\n\t}\n\n\t// Add method for progress bar animation\n\tinitProgressBarAnimation() {\n\t\tconst progressFill = this.dashboard.querySelector('.progress-fill');\n\t\tif (progressFill) {\n\t\t\tconst targetWidth = progressFill.style.width;\n\t\t\tprogressFill.style.width = '0%';\n\t\t\t\n\t\t\tsetTimeout(() => {\n\t\t\t\tprogressFill.style.width = targetWidth;\n\t\t\t}, 1000);\n\t\t}\n\t}\n\n\t// Enhanced initialization\n\tinit() {\n\t\tconsole.log('ENNU Dashboard: Initializing dashboard components...');\n\t\tthis.initDetailsToggle();\n\t\tthis.initContextualText();\n\t\tthis.initScoreAnimation();\n\t\tthis.initPillarAnimation();\n\t\tthis.initHistoricalCharts();\n\t\tthis.initHealthMapAccordion();\n\t\tthis.initToggleAll();\n\t\tthis.initAssessmentCardInteractions();\n\t\tthis.initProgressBarAnimation();\n\t\tthis.initThemeToggle(); // Call the new method here\n\t\tconsole.log('ENNU Dashboard: All components initialized');\n\t}\n}"],"names":["document","addEventListener","dashboardEl","querySelector","ENNUDashboard","MyStoryTabsManager","style","_createClass","_classCallCheck","this","activeTab","tabContainer","tabLinks","tabContents","init","key","value","_this","readyState","initialize","querySelectorAll","length","setupEventListeners","addAccessibilityAttributes","activateFirstTab","forEach","content","classList","remove","display","opacity","transform","link","firstLink","firstTabId","getAttribute","firstContent","add","setTimeout","substring","_this2","index","e","preventDefault","switchToTab","navigateToNextTab","target","contains","closest","targetTab","targetId","setAttribute","tabList","startsWith","targetContent","activeLink","concat","direction","currentIndex","Array","from","findIndex","newIndex","newTab","event","CustomEvent","detail","dispatchEvent","localStorage","setItem","savedTab","getItem","map","createElement","textContent","head","appendChild","dashboardElement","dashboard","_this3","themeToggle","savedTheme","setTheme","newTheme","theme","toggleThumb","_this4","toggleAllBtn","accordionItems","allOpen","every","item","header","toggle","button","listItem","detailsContainer","isExpanded","contextualText","mainScoreOrb","insights","updateContextualText","score","parseFloat","insight","targetScore","scoreElement","currentScore","startTime","performance","now","step","timestamp","elapsed","progress","Math","min","easeOutQuart","pow","toFixed","requestAnimationFrame","orb","Chart","initScoreHistoryChart","initBMIHistoryChart","scoreCtx","scoreData","date","type","data","labels","d","Date","datasets","label","borderColor","backgroundColor","borderWidth","fill","tension","pointBackgroundColor","pointBorderColor","pointBorderWidth","pointRadius","pointHoverRadius","options","responsive","maintainAspectRatio","interaction","intersect","mode","scales","x","time","unit","displayFormats","day","grid","color","ticks","font","size","y","plugins","legend","tooltip","titleColor","bodyColor","cornerRadius","displayColors","callbacks","title","context","parsed","toLocaleDateString","parentElement","innerHTML","bmiCtx","bmiData","bmi","_this5","card","trim","recommendationsBtn","breakdownBtn","toggleSection","sectionClass","section","animateProgressBars","bar","targetWidth","width","setProperty","progressFill","initDetailsToggle","initContextualText","initScoreAnimation","initPillarAnimation","initHistoricalCharts","initHealthMapAccordion","initToggleAll","initAssessmentCardInteractions","initProgressBarAnimation","initThemeToggle"],"sourceRoot":""}