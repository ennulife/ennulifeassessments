{"version":3,"file":"js/admin-scores-enhanced.min.js","mappings":"CAWA,WACI,aAGAA,OAAOC,kBAAoBD,OAAOC,mBAAqB,CAAC,EAExD,IAAMC,EAAO,CAETC,OAAQ,CACJC,WAAY,EACZC,WAAY,IACZC,eAAgB,IAChBC,qBAAsB,GACtBC,WAAW,GAIfC,MAAO,CACHC,aAAc,EACdC,gBAAiB,EACjBC,cAAc,EACdC,cAAe,CAAC,GAIpBC,OAAQ,CACJC,IAAK,GACLC,WAAY,KAIhBC,KAAM,WACF,IAII,GAHAC,KAAKH,IAAI,4CAGJG,KAAKC,oBAEN,YADAD,KAAKE,YAAY,4BAA6B,oBAKlDF,KAAKG,aAGLH,KAAKI,aAGbJ,KAAKK,uBAGLL,KAAKM,yBAGLN,KAAKO,uBAGLP,KAAKQ,6BAEGR,KAAKH,IAAI,sDAEb,CAAE,MAAOY,GACLT,KAAKE,YAAY,0BAA4BO,EAAMC,QAAS,aAAcD,EAC9E,CACJ,EAGAR,kBAAmB,WACf,IACMU,EAAU,GAOhB,MAJiC,oBAAtBC,mBACPD,EAAQE,KAAK,2CAGbF,EAAQG,OAAS,IACjBd,KAAKH,IAAI,yBAA2Bc,EAAQI,KAAK,MAAO,SACjD,GAIf,EAGAZ,WAAY,WACyB,oBAAtBS,oBACPZ,KAAKf,OAAS+B,OAAOC,OAAOjB,KAAKf,OAAQ2B,kBAAkBM,UAAY,CAAC,GACxElB,KAAKmB,QAAUP,kBAAkBO,SAAW,CAAC,EAC7CnB,KAAKoB,QAAUR,kBAAkBS,QACjCrB,KAAKsB,MAAQV,kBAAkBU,MAEvC,EAGAlB,WAAY,WAAW,IAAAmB,EAAA,KACnB,IAEIC,SAASC,iBAAiB,QAAS,SAACC,GACZ,4BAAhBA,EAAEC,OAAOC,GACTL,EAAKM,wBAAwBH,GACN,qBAAhBA,EAAEC,OAAOC,GAChBL,EAAKO,iBAAiBJ,GACC,sBAAhBA,EAAEC,OAAOC,GAChBL,EAAKQ,kBAAkBL,GACA,qBAAhBA,EAAEC,OAAOC,GAChBL,EAAKS,iBAAiBN,GACC,oBAAhBA,EAAEC,OAAOC,IAChBL,EAAKU,oBAAoBP,EAEjC,GAGA5C,OAAO2C,iBAAiB,qBAAsBzB,KAAKkC,yBAAyBC,KAAKnC,OAGjFlB,OAAO2C,iBAAiB,QAASzB,KAAKoC,kBAAkBD,KAAKnC,OAE7DA,KAAKH,IAAI,oCAEb,CAAE,MAAOY,GACLT,KAAKE,YAAY,0BAA4BO,EAAMC,QAAS,aAAcD,EAC9E,CACJ,EAGAJ,qBAAsB,WAClB,IAE4BmB,SAASa,iBAAiB,0CAClCC,QAAQ,SAASC,GAC7BA,EAAQd,iBAAiB,aAAc,WACnC,IAAMe,EAAUhB,SAASiB,cAAc,OACvCD,EAAQE,UAAY,eACpBF,EAAQG,YAAc3C,KAAK4C,aAAa,SACxCpB,SAASqB,KAAKC,YAAYN,GAC1BxC,KAAK+C,aAAa,sBAAuB/C,KAAK4C,aAAa,UAC3D5C,KAAKgD,gBAAgB,QACzB,GACAT,EAAQd,iBAAiB,aAAc,WACnC,IAAMe,EAAUhB,SAASyB,cAAc,iBACnCT,GACAA,EAAQU,SAERlD,KAAK4C,aAAa,yBAClB5C,KAAK+C,aAAa,QAAS/C,KAAK4C,aAAa,wBAC7C5C,KAAKgD,gBAAgB,uBAE7B,EACJ,GAGAhD,KAAKmD,sBAGLnD,KAAKoD,oBAELpD,KAAKH,IAAI,sCAEb,CAAE,MAAOY,GACLT,KAAKE,YAAY,oCAAsCO,EAAMC,QAAS,kBAAmBD,EAC7F,CACJ,EAGAH,uBAAwB,WACpB,IACIN,KAAKH,IAAI,8BAGT,IAAMwD,EAAS7B,SAASyB,cAAc,uBACtC,GAAII,EAAQ,CACR,IAAMC,EAAWD,EAAOhB,iBAAiB,KACnCkB,EAAc/B,SAASa,iBAAiB,2BAE9CiB,EAAShB,QAAQ,SAASkB,GACtBA,EAAK/B,iBAAiB,QAAS,SAASC,GACpCA,EAAE+B,iBAGFH,EAAShB,QAAQ,SAAAoB,GAAC,OAAIA,EAAEC,UAAUT,OAAO,wBAAwB,GACjEK,EAAYjB,QAAQ,SAAAsB,GAAC,OAAIA,EAAED,UAAUT,OAAO,wBAAwB,GAGpElD,KAAK2D,UAAUE,IAAI,yBAGnB,IAAMC,EAAW9D,KAAK4C,aAAa,QAAQmB,UAAU,GAC/CC,EAAgBxC,SAASyC,eAAeH,GAC1CE,GACAA,EAAcL,UAAUE,IAAI,wBAEpC,EACJ,EACJ,CAGA,IAAMK,EAAY1C,SAASa,iBAAiB,YACxC6B,EAAUpD,OAAS,GACnBoD,EAAU5B,QAAQ,SAAS6B,GACvBA,EAAI1C,iBAAiB,QAAS,SAASC,GACnCA,EAAE+B,iBAGFS,EAAU5B,QAAQ,SAAA8B,GAAC,OAAIA,EAAET,UAAUT,OAAO,iBAAiB,GAC3D1B,SAASa,iBAAiB,gBAAgBC,QAAQ,SAAA+B,GAAO,OAAIA,EAAQV,UAAUT,OAAO,SAAS,GAG/FlD,KAAK2D,UAAUE,IAAI,kBAGnB,IAAMS,EAAYtE,KAAK4C,aAAa,YACpC,GAAI0B,EAAW,CACX,IAAMN,EAAgBxC,SAASyC,eAAeK,GAC1CN,GACAA,EAAcL,UAAUE,IAAI,SAEpC,CACJ,EACJ,GAGJ7D,KAAKH,IAAI,yCAEb,CAAE,MAAOY,GACLT,KAAKE,YAAY,wCAA0CO,EAAMC,QAAS,YAAaD,EAC3F,CACJ,EAGAF,qBAAsB,WAClB,IAAMgE,EAAOvE,KAGPwE,EAAgB1F,OAAO2F,MAC7B3F,OAAO2F,MAAQ,WAAkB,QAAAC,EAAAC,UAAA7D,OAAN8D,EAAI,IAAAC,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAJF,EAAIE,GAAAH,UAAAG,GAC3B,OAAON,EAAcO,MAAM/E,KAAM4E,GAAK,MAC3B,SAASnE,GAIZ,MAHImE,EAAK,IAAMA,EAAK,GAAGI,UAAyC,IAA9BJ,EAAK,GAAGI,QAAQ,UAC9CT,EAAKU,gBAAgB,KAAM,QAASxE,EAAO,CAAEyE,IAAKN,EAAK,KAErDnE,CACV,EACR,EAGA,IAAM0E,EAAuBC,QAAQ3E,MACrC2E,QAAQ3E,MAAQ,WACZ8D,EAAKc,SAAS,gBAAiBR,MAAMS,UAAUC,MAAMC,KAAKb,WAAW5D,KAAK,MAC1EoE,EAAqBJ,MAAMK,QAAST,UACxC,CACJ,EAGAnE,2BAA4B,WACpB1B,OAAO2G,aAAe3G,OAAO2G,YAAYC,MACzC5G,OAAO2G,YAAYC,KAAK,2BAEhC,EAGA7D,wBAAyB,SAASH,GAC9BA,EAAE+B,iBAEF,IACI,IAAMkC,EAASjE,EAAEkE,cACXC,EAAS7F,KAAK8F,YAEpB,IAAKD,EAED,YADA7F,KAAK+F,iBAAiB/F,KAAKmB,QAAQV,OAAS,oBAAqB,SAIrET,KAAKgG,qBAAqB,qBAAsB,CAC5CC,QAASJ,GACVF,EAAQ3F,KAAKmB,QAAQ+E,eAAiB,0BAE7C,CAAE,MAAOzF,GACLT,KAAKE,YAAY,8BAAgCO,EAAMC,QAAS,oBAAqBD,EACzF,CACJ,EAGAqB,iBAAkB,SAASJ,GACvBA,EAAE+B,iBAEF,IACI,IAAMkC,EAASjE,EAAEkE,cACXC,EAAS7F,KAAK8F,YAEpB,IAAKD,EAED,YADA7F,KAAK+F,iBAAiB/F,KAAKmB,QAAQV,OAAS,oBAAqB,SAIrET,KAAKgG,qBAAqB,mBAAoB,CAC1CC,QAASJ,GACVF,EAAQ3F,KAAKmB,QAAQgF,WAAa,oBAAqBnG,KAAKoG,oBAAoBjE,KAAKnC,MAE5F,CAAE,MAAOS,GACLT,KAAKE,YAAY,uBAAyBO,EAAMC,QAAS,eAAgBD,EAC7E,CACJ,EAGAsB,kBAAmB,SAASL,GACxBA,EAAE+B,iBAEF,IACI,IAAMkC,EAASjE,EAAEkE,cACXC,EAAS7F,KAAK8F,YAEpB,IAAKD,EAED,YADA7F,KAAK+F,iBAAiB/F,KAAKmB,QAAQV,OAAS,oBAAqB,SAIrET,KAAKgG,qBAAqB,eAAgB,CACtCC,QAASJ,GACVF,EAAQ3F,KAAKmB,QAAQkF,SAAW,0BAEvC,CAAE,MAAO5F,GACLT,KAAKE,YAAY,wBAA0BO,EAAMC,QAAS,gBAAiBD,EAC/E,CACJ,EAGAuB,iBAAkB,SAASN,GACvBA,EAAE+B,iBAEF,IACI,IAAMkC,EAASjE,EAAEkE,cACXC,EAAS7F,KAAK8F,YAEpB9F,KAAKgG,qBAAqB,cAAe,CACrCC,QAASJ,GAAU,GACpBF,EAAQ3F,KAAKmB,QAAQmF,gBAAkB,oBAE9C,CAAE,MAAO7F,GACLT,KAAKE,YAAY,uBAAyBO,EAAMC,QAAS,cAAeD,EAC5E,CACJ,EAGAwB,oBAAqB,SAASP,GAG1B,GAFAA,EAAE+B,iBAEG8C,QAAQvG,KAAKmB,QAAQqF,eAAiB,8GAI3C,IACI,IAAMb,EAASjE,EAAEkE,cACXC,EAASF,EAAOc,QAAQZ,OAE9B,IAAKA,EAED,YADA7F,KAAK+F,iBAAiB/F,KAAKmB,QAAQV,OAAS,oBAAqB,SAIrET,KAAKgG,qBAAqB,kBAAmB,CACzCC,QAASJ,GACVF,EAAQ,mBAAoB,WAC3Be,SAASC,QACb,EAEJ,CAAE,MAAOlG,GACLT,KAAKE,YAAY,2BAA6BO,EAAMC,QAAS,mBAAoBD,EACrF,CACJ,EAGAuF,qBAAsB,SAASY,EAAQC,EAAMlB,EAAQmB,EAAgBC,GAAiB,IAAAC,EAAA,KAClF,GAAIhH,KAAKT,MAAMG,aACXM,KAAK+F,iBAAiB,iDAAkD,gBAK5E,GAAK/F,KAAKiH,iBAAV,CAKAjH,KAAKT,MAAMG,cAAe,EAG1B,IAAMwH,EAAclG,OAAOC,OAAO,CAC9B2F,OAAQ,QAAUA,EAClBtF,MAAOtB,KAAKsB,OACbuF,GAGH7G,KAAKmH,iBAAiBxB,GAAQ,EAAMmB,GACpC9G,KAAK+F,iBAAiBe,EAAgB,WAGtC9G,KAAKoH,cAAcF,EAAaN,GAC3BS,KAAK,SAACC,GACHN,EAAKO,kBAAkBD,EAAU3B,EAAQoB,EAC7C,GAAE,MACK,SAACtG,GACJuG,EAAK/B,gBAAgBxE,EAAM+G,IAAK/G,EAAMgH,OAAQhH,EAAMA,MAAO,CAAEoG,KAAMK,IACnEF,EAAKG,iBAAiBxB,GAAQ,EAClC,GAAE,QACO,WACLqB,EAAKzH,MAAMG,cAAe,CAC9B,EAzBJ,MAFIM,KAAK+F,iBAAiB/F,KAAKmB,QAAQuG,YAAc,2CAA4C,QA4BrG,EAGAN,cAAe,SAASP,EAAMD,EAAQe,GAClCA,EAAUA,GAAW,EACrB,IAAMpD,EAAOvE,KAEb,OAAOyE,MAAMzE,KAAKoB,QAAS,CACvBwG,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBhF,KAAM,IAAIiF,gBAAgBjB,KAC3BQ,KAAK,SAAAC,GACJ,IAAKA,EAASS,GACV,MAAM,IAAIC,MAAM,uBAADC,OAAwBX,EAASG,SAEpD,OAAOH,EAASY,MACpB,GAAE,MAAO,SAAAzH,GACL,GAAIkH,EAAUpD,EAAKtF,OAAOC,YAAcqF,EAAK4D,YAAY1H,GAAQ,CAC7D8D,EAAK1E,IAAI,6BAADoI,OAA8BrB,EAAM,cAAAqB,OAAaN,EAAU,EAAC,KAAAM,OAAI1D,EAAKtF,OAAOC,WAAU,MAG9F,IAAMkJ,EAAQ7D,EAAKtF,OAAOE,WAAakJ,KAAKC,IAAI,EAAGX,EAAU,GAE7D,OAAO,IAAIY,QAAQ,SAACC,EAASC,GACzBC,WAAW,WACPnE,EAAK6C,cAAcP,EAAMD,EAAQe,EAAU,GACtCgB,KAAKH,GACLI,KAAKH,EACd,EAAGL,EACP,EACJ,CACI,OAAOG,QAAQE,OAAO,CAAEjB,IAAKC,OAAQhH,MAAAA,GAE7C,EACJ,EAGA0H,YAAa,SAASX,EAAKC,GAEvB,MAAkB,YAAXA,GACW,UAAXA,GACe,IAAfD,EAAIC,QACHD,EAAIC,QAAU,KAAOD,EAAIC,OAAS,GAC9C,EAGAF,kBAAmB,SAASD,EAAU3B,EAAQoB,GAC1C,IAGI,GAFA/G,KAAKmH,iBAAiB0B,SAAS,GAE3BvB,EAASwB,QACT9I,KAAK+F,iBAAiBuB,EAAST,KAAKnG,SAAWV,KAAKmB,QAAQ2H,SAAW,oCAAqC,WAExG/B,GAA8C,mBAApBA,GAC1BA,EAAgBO,EAAST,MAI7B7G,KAAK+I,sBAEF,CACH,IAAMC,EAAe1B,EAAST,MAAQS,EAAST,KAAKnG,QAChD4G,EAAST,KAAKnG,QACbV,KAAKmB,QAAQV,OAAS,uCAE3BT,KAAK+F,iBAAiBiD,EAAc,QACxC,CAEJ,CAAE,MAAOvI,GACLT,KAAKE,YAAY,2BAA6BO,EAAMC,QAAS,wBAAyBD,EAC1F,CACJ,EAGAwE,gBAAiB,SAASuC,EAAKC,EAAQhH,EAAOwI,GAC1C,IACI,IAAIvI,EAAUV,KAAKmB,QAAQV,OAAS,uCAGjB,IAAf+G,EAAIC,OACJ/G,EAAUV,KAAKmB,QAAQ+H,eAAiB,+CAClB,MAAf1B,EAAIC,OACX/G,EAAUV,KAAKmB,QAAQgI,mBAAqB,4DACtB,MAAf3B,EAAIC,OACX/G,EAAUV,KAAKmB,QAAQuG,YAAc,yDAC9BF,EAAIC,QAAU,IACrB/G,EAAU,wCACQ,YAAX+G,EACP/G,EAAU,uCACH8G,EAAI4B,cAAgB5B,EAAI4B,aAAavC,MAAQW,EAAI4B,aAAavC,KAAKnG,UAC1EA,EAAU8G,EAAI4B,aAAavC,KAAKnG,SAGpCV,KAAK+F,iBAAiBrF,EAAS,SAG/BV,KAAKqF,SAAS,aAAc,CACxBoC,OAAQD,EAAIC,OACZ4B,WAAY5B,EACZhH,MAAOA,EACPyE,IAAK+D,EAAWA,EAAS/D,IAAM,UAC/BoC,SAAUE,EAAI8B,eAIlBtJ,KAAKuJ,kBAAkB,CACnBC,KAAM,aACN/B,OAAQD,EAAIC,OACZ4B,WAAY5B,EACZhH,MAAOA,EACPyE,IAAK+D,EAAWA,EAAS/D,IAAM,UAC/BuE,WAAW,IAAIC,MAAOC,eAG9B,CAAE,MAAOC,GACL5J,KAAKE,YAAY,yBAA2B0J,EAAalJ,QAAS,sBAAuBkJ,EAC7F,CACJ,EAGAxD,oBAAqB,SAASS,GAC1B,IACI,GAAIA,GAAQA,EAAKA,KAAM,CACnB,IAAMgD,EAAaC,KAAKC,UAAUlD,EAAKA,KAAM,KAAM,GAC7CmD,EAAO,IAAIC,KAAK,CAACJ,GAAa,CAAEL,KAAM,qBACtCtE,EAAMpG,OAAOoL,IAAIC,gBAAgBH,GAEjCI,EAAI5I,SAASiB,cAAc,KACjC2H,EAAEC,KAAOnF,EACTkF,EAAEE,SAAW,kBAAHrC,OAAqBpB,EAAKA,KAAK0D,UAAUtE,QAAO,KAAAgC,QAAI,IAAIyB,MAAOC,cAAca,MAAM,KAAK,GAAE,SACpGhJ,SAASqB,KAAKC,YAAYsH,GAC1BA,EAAEK,QACFjJ,SAASqB,KAAK6H,YAAYN,GAC1BtL,OAAOoL,IAAIS,gBAAgBzF,EAC/B,CACJ,CAAE,MAAOzE,GACLT,KAAKE,YAAY,gCAAkCO,EAAMC,QAAS,oBAAqBD,EAC3F,CACJ,EAGAwG,eAAgB,WACZ,IAAM2D,EAAMlB,KAAKkB,MASjB,OALIA,EAAM5K,KAAKT,MAAME,gBAHH,MAIdO,KAAKT,MAAMC,aAAe,KAI1BQ,KAAKT,MAAMC,cAAgBQ,KAAKf,OAAOI,uBAK3CW,KAAKT,MAAMC,eACXQ,KAAKT,MAAME,gBAAkBmL,EAEtB,GACX,EAGAzD,iBAAkB,SAASxB,EAAQkF,EAASnK,GACpCmK,GACAlF,EAAOmF,UAAW,EAClBnF,EAAOhC,UAAUE,IAAI,gBACrB8B,EAAOc,QAAQsE,aAAepF,EAAOhD,YACrCgD,EAAOqF,UAAY,yDAA2DtK,GAAW,gBAEzFiF,EAAOmF,UAAW,EAClBnF,EAAOhC,UAAUT,OAAO,gBACxByC,EAAOqF,UAAYrF,EAAOc,QAAQsE,cAAgBpF,EAAOhD,YAEjE,EAGAoD,iBAAkB,SAASrF,EAAS8I,EAAMyB,GACtC,IAGI,IAFsBzJ,SAASyC,eAAe,yBAG1C,OAGJgH,EAAWA,IAAsB,UAATzB,EAAmB,IAAO,KAGlD0B,QAAQC,YAAY,sCACZC,SAAS,QAAU5B,GACnB6B,KAAKrL,KAAKsL,oBAAoB9B,GAAQ,IAAM9I,GAGvC,YAAT8I,GACAd,WAAW,WACPwC,QAAQC,YAAY,OACxB,EAAGF,EAGX,CAAE,MAAOxK,GACL,CAER,EAGA6K,oBAAqB,SAAS9B,GAQ1B,MAPc,CACVqB,QAAS,uDACT/B,QAAS,oDACTrI,MAAO,oDACP8K,QAAS,kDAGA/B,IAAS,EAC1B,EAGArG,oBAAqB,WACjB,IACyB3B,SAASa,iBAAiB,sBAClCC,QAAQ,SAASkJ,GAC1B,IAAMC,EAAQC,iBAAiBF,GAAKC,MACpCD,EAAIG,MAAMF,MAAQ,IAClBD,EAAIG,MAAMC,WAAa,eACvBlD,WAAW,kBAAM8C,EAAIG,MAAMF,MAAQA,CAAK,EAAE,GAC9C,EACJ,CAAE,MAAOhL,GACLT,KAAKH,IAAI,kCAAoCY,EAAMC,QAAS,UAChE,CACJ,EAGA0C,kBAAmB,WACf,IAGI,IAAMyI,EAAYrK,SAASyB,cAAc,yBACrC4I,GAAaA,EAAUlI,UAAUmI,SAAS,WAC1CD,EAAUlI,UAAUE,IAAI,QAEhC,CAAE,MAAOpD,GACLT,KAAKH,IAAI,+BAAiCY,EAAMC,QAAS,UAC7D,CACJ,EAGAqI,gBAAiB,WACb,IAEI/I,KAAKoD,mBAKT,CAAE,MAAO3C,GACLT,KAAKH,IAAI,6BAA+BY,EAAMC,QAAS,UAC3D,CACJ,EAGAoF,UAAW,WAEP,IACID,EADc,IAAIiC,gBAAgBhJ,OAAO4H,SAASqF,QAC/BC,IAAI,WAE3B,IAAKnG,EAAQ,CACT,IAAMoG,EAAQnN,OAAO4H,SAASwF,SAASD,MAAM,iCACzCA,IACApG,EAASoG,EAAM,GAEvB,CAEA,IAAKpG,EAAQ,CACT,IAAMsG,EAAc3K,SAASyC,eAAe,WACxCkI,IACAtG,EAASsG,EAAYC,MAE7B,CAEA,OAAOvG,EAASwG,SAASxG,EAAQ,IAAM,IAC3C,EAGA3F,YAAa,SAASQ,EAAS4L,EAAM7L,GACjCT,KAAKqF,SAASiH,GAAQ,gBAAiB5L,EAASD,GAGhDT,KAAK+F,iBACD,kEACA,QAER,EAGAV,SAAU,SAASmE,EAAM9I,EAASD,GAC9B,IAAM8L,EAAa,CACf9C,WAAW,IAAIC,MAAOC,cACtBH,KAAMA,EACN9I,QAASA,EACTD,MAAOA,EAAQA,EAAM+L,WAAa,KAClCC,MAAOhM,EAAQA,EAAMgM,MAAQ,KAC7BC,UAAWC,UAAUD,UACrBxH,IAAKpG,OAAO4H,SAAS2D,MAIzBrK,KAAKJ,OAAOC,IAAIgB,KAAK0L,GAGjBvM,KAAKJ,OAAOC,IAAIiB,OAASd,KAAKJ,OAAOE,aACrCE,KAAKJ,OAAOC,IAAMG,KAAKJ,OAAOC,IAAI0F,OAAOvF,KAAKJ,OAAOE,aAIrDE,KAAKf,OAAOK,SAEpB,EAGAiK,kBAAmB,SAASqD,GACxB,IAEI,GAAI5M,KAAKJ,OAAOC,IAAIiB,OAAS,GACzB,OAGJ2D,MAAMzE,KAAKoB,QAAS,CAChBwG,OAAQ,OACRC,QAAS,CACL,eAAgB,qCAEpBhF,KAAM,IAAIiF,gBAAgB,CACtBlB,OAAQ,wBACRtF,MAAOtB,KAAKsB,MACZuL,WAAY/C,KAAKC,UAAU6C,OAEjC,MAAO,WACL,EAGR,CAAE,MAAOnM,GACL,CAER,EAGAyB,yBAA0B,SAAS4K,GAC/B9M,KAAKqF,SAAS,8BAA+ByH,EAAMC,OACvD,EAGA3K,kBAAmB,SAAS0K,GACxB9M,KAAKqF,SAAS,eAAgByH,EAAMpM,QAAS,CACzCsM,SAAUF,EAAME,SAChBC,OAAQH,EAAMG,OACdC,MAAOJ,EAAMI,OAErB,EAGArN,IAAK,SAASa,EAASyM,GACnBA,EAAQA,GAAS,OAEbnN,KAAKf,OAAOK,SAGpB,EAGA8N,YAAa,WACT,OAAOpN,KAAKJ,OAAOC,GACvB,EAGAwN,cAAe,WACXrN,KAAKJ,OAAOC,IAAM,EACtB,GAIJ2B,SAASC,iBAAiB,mBAAoB,WAC1CzC,EAAKe,MACT,GAGAjB,OAAOC,kBAAoBC,CAE9B,CA7xBD","sources":["webpack://ennulife-assessments/./assets/js/admin-scores-enhanced.js"],"sourcesContent":["/**\n * ENNU Life Enhanced Admin JavaScript - Bulletproof Edition\n * \n * Bulletproof JavaScript with comprehensive error handling, retry mechanisms,\n * and graceful degradation for zero-issue deployment.\n * \n * @package ENNU_Life\n * @version 23.1.0\n * @author Manus - World's Greatest WordPress Developer\n */\n\n(function($) {\n    'use strict';\n    \n    // Bulletproof namespace\n    window.ENNUAdminEnhanced = window.ENNUAdminEnhanced || {};\n    \n    const ENNU = {\n        // Configuration\n        config: {\n            maxRetries: 3,\n            retryDelay: 1000,\n            requestTimeout: 30000,\n            maxRequestsPerMinute: 10,\n            debugMode: false\n        },\n        \n        // State management\n        state: {\n            requestCount: 0,\n            lastRequestTime: 0,\n            isProcessing: false,\n            retryAttempts: {}\n        },\n        \n        // Error tracking\n        errors: {\n            log: [],\n            maxLogSize: 100\n        },\n        \n        // Initialize the enhanced admin system\n        init: function() {\n            try {\n                this.log('Initializing ENNU Enhanced Admin System');\n                \n                // Check dependencies\n                if (!this.checkDependencies()) {\n                    this.handleError('Dependencies check failed', 'DEPENDENCY_ERROR');\n                    return;\n                }\n                \n                // Load configuration from WordPress\n                this.loadConfig();\n                \n                // Bind event handlers\n                this.bindEvents();\n                \n                        // Initialize components\n        this.initializeComponents();\n        \n        // Initialize tab switching\n        this.initializeTabSwitching();\n        \n        // Setup error monitoring\n        this.setupErrorMonitoring();\n        \n        // Setup performance monitoring\n        this.setupPerformanceMonitoring();\n                \n                this.log('ENNU Enhanced Admin System initialized successfully');\n                \n            } catch (error) {\n                this.handleError('Initialization failed: ' + error.message, 'INIT_ERROR', error);\n            }\n        },\n        \n        // Check for required dependencies\n        checkDependencies: function() {\n            const required = ['ennuAdminEnhanced'];\n            const missing = [];\n            \n            \n            if (typeof ennuAdminEnhanced === 'undefined') {\n                missing.push('ennuAdminEnhanced localization object');\n            }\n            \n            if (missing.length > 0) {\n                this.log('Missing dependencies: ' + missing.join(', '), 'error');\n                return false;\n            }\n            \n            return true;\n        },\n        \n        // Load configuration from WordPress localization\n        loadConfig: function() {\n            if (typeof ennuAdminEnhanced !== 'undefined') {\n                this.config = Object.assign(this.config, ennuAdminEnhanced.security || {});\n                this.strings = ennuAdminEnhanced.strings || {};\n                this.ajaxUrl = ennuAdminEnhanced.ajaxurl;\n                this.nonce = ennuAdminEnhanced.nonce;\n            }\n        },\n        \n        // Bind event handlers with error protection\n        bindEvents: function() {\n            try {\n                // Recalculate scores button\n                document.addEventListener('click', (e) => {\n                    if (e.target.id === 'ennu-recalculate-scores') {\n                        this.handleRecalculateScores(e);\n                    } else if (e.target.id === 'ennu-export-data') {\n                        this.handleExportData(e);\n                    } else if (e.target.id === 'ennu-sync-hubspot') {\n                        this.handleSyncHubSpot(e);\n                    } else if (e.target.id === 'ennu-clear-cache') {\n                        this.handleClearCache(e);\n                    } else if (e.target.id === 'ennu-clear-data') {\n                        this.handleClearUserData(e);\n                    }\n                });\n\n                // Global error handler for unhandled promise rejections\n                window.addEventListener('unhandledrejection', this.handleUnhandledRejection.bind(this));\n                \n                // Global error handler for JavaScript errors\n                window.addEventListener('error', this.handleGlobalError.bind(this));\n                \n                this.log('Event handlers bound successfully');\n                \n            } catch (error) {\n                this.handleError('Failed to bind events: ' + error.message, 'BIND_ERROR', error);\n            }\n        },\n        \n        // Initialize components\n        initializeComponents: function() {\n            try {\n                // Initialize tooltips with vanilla JavaScript\n                const tooltipElements = document.querySelectorAll('.ennu-enhanced-admin-container [title]');\n                tooltipElements.forEach(function(element) {\n                    element.addEventListener('mouseenter', function() {\n                        const tooltip = document.createElement('div');\n                        tooltip.className = 'ennu-tooltip';\n                        tooltip.textContent = this.getAttribute('title');\n                        document.body.appendChild(tooltip);\n                        this.setAttribute('data-original-title', this.getAttribute('title'));\n                        this.removeAttribute('title');\n                    });\n                    element.addEventListener('mouseleave', function() {\n                        const tooltip = document.querySelector('.ennu-tooltip');\n                        if (tooltip) {\n                            tooltip.remove();\n                        }\n                        if (this.getAttribute('data-original-title')) {\n                            this.setAttribute('title', this.getAttribute('data-original-title'));\n                            this.removeAttribute('data-original-title');\n                        }\n                    });\n                });\n                \n                // Initialize progress animations\n                this.animateProgressBars();\n                \n                // Initialize cache status updates\n                this.updateCacheStatus();\n                \n                this.log('Components initialized successfully');\n                \n            } catch (error) {\n                this.handleError('Failed to initialize components: ' + error.message, 'COMPONENT_ERROR', error);\n            }\n        },\n        \n        // Initialize tab switching functionality\n        initializeTabSwitching: function() {\n            try {\n                this.log('Initializing tab switching');\n                \n                // Handle ENNU admin tabs\n                const tabNav = document.querySelector('.ennu-admin-tab-nav');\n                if (tabNav) {\n                    const tabLinks = tabNav.querySelectorAll('a');\n                    const tabContents = document.querySelectorAll('.ennu-admin-tab-content');\n                    \n                    tabLinks.forEach(function(link) {\n                        link.addEventListener('click', function(e) {\n                            e.preventDefault();\n                            \n                            // Remove active class from all tabs and contents\n                            tabLinks.forEach(l => l.classList.remove('ennu-admin-tab-active'));\n                            tabContents.forEach(c => c.classList.remove('ennu-admin-tab-active'));\n                            \n                            // Add active class to clicked tab\n                            this.classList.add('ennu-admin-tab-active');\n                            \n                            // Show corresponding content\n                            const targetId = this.getAttribute('href').substring(1);\n                            const targetContent = document.getElementById(targetId);\n                            if (targetContent) {\n                                targetContent.classList.add('ennu-admin-tab-active');\n                            }\n                        });\n                    });\n                }\n                \n                // Handle biomarker range management tabs\n                const rangeTabs = document.querySelectorAll('.nav-tab');\n                if (rangeTabs.length > 0) {\n                    rangeTabs.forEach(function(tab) {\n                        tab.addEventListener('click', function(e) {\n                            e.preventDefault();\n                            \n                            // Remove active class from all tabs and content\n                            rangeTabs.forEach(t => t.classList.remove('nav-tab-active'));\n                            document.querySelectorAll('.tab-content').forEach(content => content.classList.remove('active'));\n                            \n                            // Add active class to clicked tab\n                            this.classList.add('nav-tab-active');\n                            \n                            // Show corresponding content\n                            const targetTab = this.getAttribute('data-tab');\n                            if (targetTab) {\n                                const targetContent = document.getElementById(targetTab);\n                                if (targetContent) {\n                                    targetContent.classList.add('active');\n                                }\n                            }\n                        });\n                    });\n                }\n                \n                this.log('Tab switching initialized successfully');\n                \n            } catch (error) {\n                this.handleError('Tab switching initialization failed: ' + error.message, 'TAB_ERROR', error);\n            }\n        },\n        \n        // Setup error monitoring\n        setupErrorMonitoring: function() {\n            const self = this;\n            \n            // Monitor fetch errors - vanilla JavaScript replacement for ajaxError\n            const originalFetch = window.fetch;\n            window.fetch = function(...args) {\n                return originalFetch.apply(this, args)\n                    .catch(function(error) {\n                        if (args[0] && args[0].indexOf && args[0].indexOf('ennu_') !== -1) {\n                            self.handleAjaxError(null, 'error', error, { url: args[0] });\n                        }\n                        throw error;\n                    });\n            };\n            \n            // Monitor console errors\n            const originalConsoleError = console.error;\n            console.error = function() {\n                self.logError('Console Error', Array.prototype.slice.call(arguments).join(' '));\n                originalConsoleError.apply(console, arguments);\n            };\n        },\n        \n        // Setup performance monitoring\n        setupPerformanceMonitoring: function() {\n            if (window.performance && window.performance.mark) {\n                window.performance.mark('ennu-admin-init-complete');\n            }\n        },\n        \n        // Handle recalculate scores with bulletproof error handling\n        handleRecalculateScores: function(e) {\n            e.preventDefault();\n            \n            try {\n                const button = e.currentTarget;\n                const userId = this.getUserId();\n                \n                if (!userId) {\n                    this.showNotification(this.strings.error || 'User ID not found', 'error');\n                    return;\n                }\n                \n                this.performAjaxOperation('recalculate_scores', {\n                    user_id: userId\n                }, button, this.strings.recalculating || 'Recalculating scores...');\n                \n            } catch (error) {\n                this.handleError('Recalculate scores failed: ' + error.message, 'RECALCULATE_ERROR', error);\n            }\n        },\n        \n        // Handle export data\n        handleExportData: function(e) {\n            e.preventDefault();\n            \n            try {\n                const button = e.currentTarget;\n                const userId = this.getUserId();\n                \n                if (!userId) {\n                    this.showNotification(this.strings.error || 'User ID not found', 'error');\n                    return;\n                }\n                \n                this.performAjaxOperation('export_user_data', {\n                    user_id: userId\n                }, button, this.strings.exporting || 'Exporting data...', this.handleExportSuccess.bind(this));\n                \n            } catch (error) {\n                this.handleError('Export data failed: ' + error.message, 'EXPORT_ERROR', error);\n            }\n        },\n        \n        // Handle HubSpot sync\n        handleSyncHubSpot: function(e) {\n            e.preventDefault();\n            \n            try {\n                const button = e.currentTarget;\n                const userId = this.getUserId();\n                \n                if (!userId) {\n                    this.showNotification(this.strings.error || 'User ID not found', 'error');\n                    return;\n                }\n                \n                this.performAjaxOperation('sync_hubspot', {\n                    user_id: userId\n                }, button, this.strings.syncing || 'Syncing with HubSpot...');\n                \n            } catch (error) {\n                this.handleError('HubSpot sync failed: ' + error.message, 'HUBSPOT_ERROR', error);\n            }\n        },\n        \n        // Handle clear cache\n        handleClearCache: function(e) {\n            e.preventDefault();\n            \n            try {\n                const button = e.currentTarget;\n                const userId = this.getUserId();\n                \n                this.performAjaxOperation('clear_cache', {\n                    user_id: userId || 0\n                }, button, this.strings.clearing_cache || 'Clearing cache...');\n                \n            } catch (error) {\n                this.handleError('Clear cache failed: ' + error.message, 'CACHE_ERROR', error);\n            }\n        },\n        \n        // Handle clear user data\n        handleClearUserData: function(e) {\n            e.preventDefault();\n\n            if (!confirm(this.strings.confirm_clear || 'Are you sure you want to permanently delete all ENNU assessment data for this user? This cannot be undone.')) {\n                return;\n            }\n\n            try {\n                const button = e.currentTarget;\n                const userId = button.dataset.userId;\n\n                if (!userId) {\n                    this.showNotification(this.strings.error || 'User ID not found', 'error');\n                    return;\n                }\n\n                this.performAjaxOperation('clear_user_data', {\n                    user_id: userId\n                }, button, 'Clearing data...', function() {\n                    location.reload();\n                });\n\n            } catch (error) {\n                this.handleError('Clear user data failed: ' + error.message, 'CLEAR_DATA_ERROR', error);\n            }\n        },\n\n        // Bulletproof AJAX operation with retry mechanism\n        performAjaxOperation: function(action, data, button, loadingMessage, successCallback) {\n            if (this.state.isProcessing) {\n                this.showNotification('Another operation is in progress. Please wait.', 'warning');\n                return;\n            }\n            \n            // Rate limiting check\n            if (!this.checkRateLimit()) {\n                this.showNotification(this.strings.rate_limit || 'Too many requests. Please wait a moment.', 'error');\n                return;\n            }\n            \n            this.state.isProcessing = true;\n            \n            // Prepare request data\n            const requestData = Object.assign({\n                action: 'ennu_' + action,\n                nonce: this.nonce\n            }, data);\n            \n            // Show loading state\n            this.setButtonLoading(button, true, loadingMessage);\n            this.showNotification(loadingMessage, 'loading');\n            \n            // Perform AJAX request with retry\n            this.ajaxWithRetry(requestData, action)\n                .then((response) => {\n                    this.handleAjaxSuccess(response, button, successCallback);\n                })\n                .catch((error) => {\n                    this.handleAjaxError(error.xhr, error.status, error.error, { data: requestData });\n                    this.setButtonLoading(button, false);\n                })\n                .finally(() => {\n                    this.state.isProcessing = false;\n                });\n        },\n        \n        // AJAX with retry mechanism\n        ajaxWithRetry: function(data, action, attempt) {\n            attempt = attempt || 1;\n            const self = this;\n            \n            return fetch(this.ajaxUrl, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/x-www-form-urlencoded',\n                },\n                body: new URLSearchParams(data)\n            }).then(response => {\n                if (!response.ok) {\n                    throw new Error(`HTTP error! status: ${response.status}`);\n                }\n                return response.json();\n            }).catch(error => {\n                if (attempt < self.config.maxRetries && self.shouldRetry(error)) {\n                    self.log(`Retrying AJAX request for ${action} (attempt ${attempt + 1}/${self.config.maxRetries})`);\n                    \n                    // Exponential backoff\n                    const delay = self.config.retryDelay * Math.pow(2, attempt - 1);\n                    \n                    return new Promise((resolve, reject) => {\n                        setTimeout(() => {\n                            self.ajaxWithRetry(data, action, attempt + 1)\n                                .done(resolve)\n                                .fail(reject);\n                        }, delay);\n                    });\n                } else {\n                    return Promise.reject({ xhr, status, error });\n                }\n            });\n        },\n        \n        // Determine if request should be retried\n        shouldRetry: function(xhr, status) {\n            // Retry on network errors, timeouts, and 5xx server errors\n            return status === 'timeout' || \n                   status === 'error' || \n                   xhr.status === 0 || \n                   (xhr.status >= 500 && xhr.status < 600);\n        },\n        \n        // Handle AJAX success\n        handleAjaxSuccess: function(response, button, successCallback) {\n            try {\n                this.setButtonLoading($button, false);\n                \n                if (response.success) {\n                    this.showNotification(response.data.message || this.strings.success || 'Operation completed successfully!', 'success');\n                    \n                    if (successCallback && typeof successCallback === 'function') {\n                        successCallback(response.data);\n                    }\n                    \n                    // Refresh page data if needed\n                    this.refreshPageData();\n                    \n                } else {\n                    const errorMessage = response.data && response.data.message ? \n                        response.data.message : \n                        (this.strings.error || 'An error occurred. Please try again.');\n                    \n                    this.showNotification(errorMessage, 'error');\n                }\n                \n            } catch (error) {\n                this.handleError('Success handler failed: ' + error.message, 'SUCCESS_HANDLER_ERROR', error);\n            }\n        },\n        \n        // Handle AJAX errors with comprehensive error analysis\n        handleAjaxError: function(xhr, status, error, settings) {\n            try {\n                let message = this.strings.error || 'An error occurred. Please try again.';\n                \n                // Analyze error type\n                if (xhr.status === 0) {\n                    message = this.strings.network_error || 'Network error. Please check your connection.';\n                } else if (xhr.status === 403) {\n                    message = this.strings.permission_denied || 'Permission denied. Please refresh the page and try again.';\n                } else if (xhr.status === 429) {\n                    message = this.strings.rate_limit || 'Too many requests. Please wait a moment and try again.';\n                } else if (xhr.status >= 500) {\n                    message = 'Server error. Please try again later.';\n                } else if (status === 'timeout') {\n                    message = 'Request timed out. Please try again.';\n                } else if (xhr.responseJSON && xhr.responseJSON.data && xhr.responseJSON.data.message) {\n                    message = xhr.responseJSON.data.message;\n                }\n                \n                this.showNotification(message, 'error');\n                \n                // Log error for debugging\n                this.logError('AJAX Error', {\n                    status: xhr.status,\n                    statusText: status,\n                    error: error,\n                    url: settings ? settings.url : 'unknown',\n                    response: xhr.responseText\n                });\n                \n                // Send error to server for logging\n                this.sendErrorToServer({\n                    type: 'ajax_error',\n                    status: xhr.status,\n                    statusText: status,\n                    error: error,\n                    url: settings ? settings.url : 'unknown',\n                    timestamp: new Date().toISOString()\n                });\n                \n            } catch (handlerError) {\n                this.handleError('Error handler failed: ' + handlerError.message, 'ERROR_HANDLER_ERROR', handlerError);\n            }\n        },\n        \n        // Handle export success with file download\n        handleExportSuccess: function(data) {\n            try {\n                if (data && data.data) {\n                    const exportData = JSON.stringify(data.data, null, 2);\n                    const blob = new Blob([exportData], { type: 'application/json' });\n                    const url = window.URL.createObjectURL(blob);\n                    \n                    const a = document.createElement('a');\n                    a.href = url;\n                    a.download = `ennu-user-data-${data.data._metadata.user_id}-${new Date().toISOString().split('T')[0]}.json`;\n                    document.body.appendChild(a);\n                    a.click();\n                    document.body.removeChild(a);\n                    window.URL.revokeObjectURL(url);\n                }\n            } catch (error) {\n                this.handleError('Export file creation failed: ' + error.message, 'EXPORT_FILE_ERROR', error);\n            }\n        },\n        \n        // Rate limiting check\n        checkRateLimit: function() {\n            const now = Date.now();\n            const oneMinute = 60 * 1000;\n            \n            // Reset counter if more than a minute has passed\n            if (now - this.state.lastRequestTime > oneMinute) {\n                this.state.requestCount = 0;\n            }\n            \n            // Check if limit exceeded\n            if (this.state.requestCount >= this.config.maxRequestsPerMinute) {\n                return false;\n            }\n            \n            // Update counters\n            this.state.requestCount++;\n            this.state.lastRequestTime = now;\n            \n            return true;\n        },\n        \n        // Set button loading state\n        setButtonLoading: function(button, loading, message) {\n            if (loading) {\n                button.disabled = true;\n                button.classList.add('ennu-loading');\n                button.dataset.originalText = button.textContent;\n                button.innerHTML = '<span class=\"dashicons dashicons-update-alt\"></span> ' + (message || 'Loading...');\n            } else {\n                button.disabled = false;\n                button.classList.remove('ennu-loading');\n                button.innerHTML = button.dataset.originalText || button.textContent;\n            }\n        },\n        \n        // Show notification with auto-hide\n        showNotification: function(message, type, duration) {\n            try {\n                const statusElement = document.getElementById('ennu-operation-status');\n                \n                if (!statusElement) {\n                    return;\n                }\n                \n                duration = duration || (type === 'error' ? 8000 : 4000);\n                \n                // Clear existing classes and hide\n                $status.removeClass('show loading success error warning')\n                       .addClass('show ' + type)\n                       .html(this.getNotificationIcon(type) + ' ' + message);\n                \n                // Auto-hide after duration\n                if (type !== 'loading') {\n                    setTimeout(() => {\n                        $status.removeClass('show');\n                    }, duration);\n                }\n                \n            } catch (error) {\n                // Fallback to console if notification system fails\n            }\n        },\n        \n        // Get notification icon\n        getNotificationIcon: function(type) {\n            const icons = {\n                loading: '<span class=\"dashicons dashicons-update-alt\"></span>',\n                success: '<span class=\"dashicons dashicons-yes-alt\"></span>',\n                error: '<span class=\"dashicons dashicons-warning\"></span>',\n                warning: '<span class=\"dashicons dashicons-info\"></span>'\n            };\n            \n            return icons[type] || '';\n        },\n        \n        // Animate progress bars\n        animateProgressBars: function() {\n            try {\n                const progressBars = document.querySelectorAll('.ennu-progress-bar');\n                progressBars.forEach(function(bar) {\n                    const width = getComputedStyle(bar).width;\n                    bar.style.width = '0';\n                    bar.style.transition = 'width 1000ms';\n                    setTimeout(() => bar.style.width = width, 10);\n                });\n            } catch (error) {\n                this.log('Progress bar animation failed: ' + error.message, 'warning');\n            }\n        },\n        \n        // Update cache status\n        updateCacheStatus: function() {\n            try {\n                // This would typically make an AJAX call to get current cache status\n                // For now, we'll just update the display based on existing data\n                const indicator = document.querySelector('.ennu-cache-indicator');\n                if (indicator && indicator.classList.contains('active')) {\n                    indicator.classList.add('pulse');\n                }\n            } catch (error) {\n                this.log('Cache status update failed: ' + error.message, 'warning');\n            }\n        },\n        \n        // Refresh page data\n        refreshPageData: function() {\n            try {\n                // Refresh cache status\n                this.updateCacheStatus();\n                \n                // Refresh any dynamic content\n                // This could trigger a partial page refresh if needed\n                \n            } catch (error) {\n                this.log('Page data refresh failed: ' + error.message, 'warning');\n            }\n        },\n        \n        // Get user ID from page\n        getUserId: function() {\n            // Try multiple methods to get user ID\n            const urlParams = new URLSearchParams(window.location.search);\n            let userId = urlParams.get('user_id');\n            \n            if (!userId) {\n                const match = window.location.pathname.match(/user-edit\\.php.*user_id=(\\d+)/);\n                if (match) {\n                    userId = match[1];\n                }\n            }\n            \n            if (!userId) {\n                const userIdField = document.getElementById('user_id');\n                if (userIdField) {\n                    userId = userIdField.value;\n                }\n            }\n            \n            return userId ? parseInt(userId, 10) : null;\n        },\n        \n        // Error handling and logging\n        handleError: function(message, code, error) {\n            this.logError(code || 'GENERAL_ERROR', message, error);\n            \n            // Show user-friendly error message\n            this.showNotification(\n                'A system error occurred. Please refresh the page and try again.',\n                'error'\n            );\n        },\n        \n        // Log error with details\n        logError: function(type, message, error) {\n            const errorEntry = {\n                timestamp: new Date().toISOString(),\n                type: type,\n                message: message,\n                error: error ? error.toString() : null,\n                stack: error ? error.stack : null,\n                userAgent: navigator.userAgent,\n                url: window.location.href\n            };\n            \n            // Add to local error log\n            this.errors.log.push(errorEntry);\n            \n            // Keep log size manageable\n            if (this.errors.log.length > this.errors.maxLogSize) {\n                this.errors.log = this.errors.log.slice(-this.errors.maxLogSize);\n            }\n            \n            // Log to console in debug mode\n            if (this.config.debugMode) {\n            }\n        },\n        \n        // Send error to server for logging\n        sendErrorToServer: function(errorData) {\n            try {\n                // Don't send too many error reports\n                if (this.errors.log.length > 10) {\n                    return;\n                }\n                \n                fetch(this.ajaxUrl, {\n                    method: 'POST',\n                    headers: {\n                        'Content-Type': 'application/x-www-form-urlencoded',\n                    },\n                    body: new URLSearchParams({\n                        action: 'ennu_log_client_error',\n                        nonce: this.nonce,\n                        error_data: JSON.stringify(errorData)\n                    })\n                }).catch(() => {\n                    // Silently fail - don't create error loops\n                });\n                \n            } catch (error) {\n                // Silently fail - don't create error loops\n            }\n        },\n        \n        // Handle unhandled promise rejections\n        handleUnhandledRejection: function(event) {\n            this.logError('UNHANDLED_PROMISE_REJECTION', event.reason);\n        },\n        \n        // Handle global JavaScript errors\n        handleGlobalError: function(event) {\n            this.logError('GLOBAL_ERROR', event.message, {\n                filename: event.filename,\n                lineno: event.lineno,\n                colno: event.colno\n            });\n        },\n        \n        // Logging utility\n        log: function(message, level) {\n            level = level || 'info';\n            \n            if (this.config.debugMode || level === 'error') {\n                console[level]('ENNU Admin:', message);\n            }\n        },\n        \n        // Get error log for debugging\n        getErrorLog: function() {\n            return this.errors.log;\n        },\n        \n        // Clear error log\n        clearErrorLog: function() {\n            this.errors.log = [];\n        }\n    };\n    \n    // Initialize when document is ready\n    document.addEventListener('DOMContentLoaded', function() {\n        ENNU.init();\n    });\n    \n    // Expose ENNU object globally for debugging\n    window.ENNUAdminEnhanced = ENNU;\n    \n})();\n\n"],"names":["window","ENNUAdminEnhanced","ENNU","config","maxRetries","retryDelay","requestTimeout","maxRequestsPerMinute","debugMode","state","requestCount","lastRequestTime","isProcessing","retryAttempts","errors","log","maxLogSize","init","this","checkDependencies","handleError","loadConfig","bindEvents","initializeComponents","initializeTabSwitching","setupErrorMonitoring","setupPerformanceMonitoring","error","message","missing","ennuAdminEnhanced","push","length","join","Object","assign","security","strings","ajaxUrl","ajaxurl","nonce","_this","document","addEventListener","e","target","id","handleRecalculateScores","handleExportData","handleSyncHubSpot","handleClearCache","handleClearUserData","handleUnhandledRejection","bind","handleGlobalError","querySelectorAll","forEach","element","tooltip","createElement","className","textContent","getAttribute","body","appendChild","setAttribute","removeAttribute","querySelector","remove","animateProgressBars","updateCacheStatus","tabNav","tabLinks","tabContents","link","preventDefault","l","classList","c","add","targetId","substring","targetContent","getElementById","rangeTabs","tab","t","content","targetTab","self","originalFetch","fetch","_len","arguments","args","Array","_key","apply","indexOf","handleAjaxError","url","originalConsoleError","console","logError","prototype","slice","call","performance","mark","button","currentTarget","userId","getUserId","showNotification","performAjaxOperation","user_id","recalculating","exporting","handleExportSuccess","syncing","clearing_cache","confirm","confirm_clear","dataset","location","reload","action","data","loadingMessage","successCallback","_this2","checkRateLimit","requestData","setButtonLoading","ajaxWithRetry","then","response","handleAjaxSuccess","xhr","status","rate_limit","attempt","method","headers","URLSearchParams","ok","Error","concat","json","shouldRetry","delay","Math","pow","Promise","resolve","reject","setTimeout","done","fail","$button","success","refreshPageData","errorMessage","settings","network_error","permission_denied","responseJSON","statusText","responseText","sendErrorToServer","type","timestamp","Date","toISOString","handlerError","exportData","JSON","stringify","blob","Blob","URL","createObjectURL","a","href","download","_metadata","split","click","removeChild","revokeObjectURL","now","loading","disabled","originalText","innerHTML","duration","$status","removeClass","addClass","html","getNotificationIcon","warning","bar","width","getComputedStyle","style","transition","indicator","contains","search","get","match","pathname","userIdField","value","parseInt","code","errorEntry","toString","stack","userAgent","navigator","errorData","error_data","event","reason","filename","lineno","colno","level","getErrorLog","clearErrorLog"],"sourceRoot":""}